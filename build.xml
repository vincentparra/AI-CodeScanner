<project name="ai-code-scanner" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="build.properties"/>
    <property name="build.dir" location="build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
    <property name="dist.dir" location="${build.dir}/dist"/>
    <property name="src.dir" location="src/main/java"/>
    <property name="doc.dir" location="${build.dir}/doc"/>
    <property name="temp.dirs" value="build/"/>


    <!--    clean    -->
    <target name="clean" description="Remove temporary directories">
        <echo>Cleaning temporary dirs...</echo>
        <delete includeemptydirs="true">
            <fileset dir="." includes="${temp.dirs}"/>
        </delete>
    </target>

    <!--    initialize    -->
    <target name="init" depends="clean" description="Create directories">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>


    <!--    compile    -->
    <target name="compile" depends="init" description="Compiles the java project.">
        <echo>Compiling...</echo>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" includeantruntime="false" debug="true"/>
    </target>

    <!--    build   -->
    <target name="build" depends="compile" description="Builds the project">
        <echo>Building...</echo>
    </target>
    <target name="resolve">
        <echo>Resolving dependencies...</echo>
        <ivy:retrieve/>
    </target>

    <!--    generate javaDOC    -->
    <target name="generate-javadoc">
        <javadoc packagenames="com.rocs.code.scanner.*"
                 sourcepath="${src.dir}"
                 destdir="${doc.dir}"
                 version="${version}"
                 windowtitle="AI-CodeScanner">

            <group title="Data layer" packages="com.rocs.code.scanner.data.*"/>
            <group title="App layer" packages="com.rocs.code.scanner.app.*"/>

            <doctitle><![CDATA[AI CodeScanner Documentation - ${version}]]></doctitle>
            <bottom>
                <![CDATA[Copyright Â© ${copyright.year}. All Rights Reserved.]]>
            </bottom>
        </javadoc>
        <echo message="java doc has been generated!"/>
    </target>

    <!--    build JAR   -->
    <target name="build-jar"  depends="compile" description="Creates a jar file for the project">
        <jar destfile="${dist.dir}/${dist.app.name}-${version}.jar"
             basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class"
                           value="com.rocs.code.scanner.CodeScanner"/>
            </manifest>
            <fileset dir="src/main/resource"/>
        </jar>
    </target>
    <target name="update-version" description="Updates the version in build.properties">
        <echo>Updating version to ${new.version}</echo>
        <replaceregexp file="build.properties"
                       match="version=.*"
                       replace="version=${new.version}"
                       byline="true"/>
        <echo>Also updating version in ivy.xml</echo>
        <replaceregexp file="ivy.xml"
                       match='revision="[^"]*"'
                       replace='revision="${new.version}"'
                       byline="true"/>
    </target>

    <!--release process -->
    <target name="release" depends="build, build-jar, generate-javadoc"
            description="Performs a complete release build">
        <echo>Creating release version ${version}</echo>
    </target>

    <!--    run JAR    -->
    <target name="run" description="Run the application">
        <java jar="${dist.dir}/CodeScanner.jar" fork="true"/>
    </target>

</project>